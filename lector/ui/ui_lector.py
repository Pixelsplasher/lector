# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/ui_lector.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
# added QAction
from PyQt6.QtGui import QIcon, QAction

class Ui_Lector(object):
    def setupUi(self, Lector):
        Lector.setObjectName("Lector")
        Lector.resize(776, 572)
        icon = QtGui.QIcon()
		# was QtGui.QIcon.Normal
		# was QtGui.QIcon.On
        icon.addPixmap(QtGui.QPixmap(":/icons/icons/L.png"), QIcon.Mode.Normal, QtGui.QIcon.State.On)
        Lector.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(Lector)
        self.centralwidget.setObjectName("centralwidget")
        Lector.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Lector)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 776, 20))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menu_Edit = QtWidgets.QMenu(self.menubar)
        self.menu_Edit.setObjectName("menu_Edit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        Lector.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Lector)
        self.statusbar.setObjectName("statusbar")
        Lector.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(Lector)
        self.toolBar.setMovable(False)
        self.toolBar.setIconSize(QtCore.QSize(32, 32))
		# was Qt.ToolButtonTextUnderIcon
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonStyle.ToolButtonTextUnderIcon)
        self.toolBar.setFloatable(False)
        self.toolBar.setObjectName("toolBar")
		# was Qt.TopToolBarArea
        Lector.addToolBar(QtCore.Qt.ToolBarArea.TopToolBarArea, self.toolBar)
        self.textEditorDock = QtWidgets.QDockWidget(Lector)
		# was QtWidgets.QSizePolicy.Preferred
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEditorDock.sizePolicy().hasHeightForWidth())
        self.textEditorDock.setSizePolicy(sizePolicy)
		# was QtWidgets.QDockWidget.DockWidgetFloatable|QtWidgets.QDockWidget.DockWidgetMovable
        self.textEditorDock.setFeatures(QtWidgets.QDockWidget.DockWidgetFeature.DockWidgetFloatable|QtWidgets.QDockWidget.DockWidgetFeature.DockWidgetMovable)
        self.textEditorDock.setObjectName("textEditorDock")
        self.mwTextEditor = QtWidgets.QMainWindow()
        self.mwTextEditor.setObjectName("mwTextEditor")
        self.textEditorDock.setWidget(self.mwTextEditor)
        Lector.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.textEditorDock)
        self.dockWidget = QtWidgets.QDockWidget(Lector)
        self.dockWidget.setMinimumSize(QtCore.QSize(150, 300))
		# was QtWidgets.QDockWidget.DockWidgetFloatable|QtWidgets.QDockWidget.DockWidgetMovable
        self.dockWidget.setFeatures(QtWidgets.QDockWidget.DockWidgetFeature.DockWidgetFloatable|QtWidgets.QDockWidget.DockWidgetFeature.DockWidgetMovable)
        self.dockWidget.setWindowTitle("")
        self.dockWidget.setObjectName("dockWidget")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.vboxlayout = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.vboxlayout.setObjectName("vboxlayout")
        self.groupBox_language = QtWidgets.QGroupBox(self.dockWidgetContents)
        self.groupBox_language.setFlat(True)
        self.groupBox_language.setObjectName("groupBox_language")
        self.vboxlayout1 = QtWidgets.QVBoxLayout(self.groupBox_language)
        self.vboxlayout1.setObjectName("vboxlayout1")
        self.rbtn_lang_select = QtWidgets.QComboBox(self.groupBox_language)
        self.rbtn_lang_select.setObjectName("rbtn_lang_select")
        self.vboxlayout1.addWidget(self.rbtn_lang_select)
        self.vboxlayout.addWidget(self.groupBox_language)
        self.groupBox_areaType = QtWidgets.QGroupBox(self.dockWidgetContents)
        self.groupBox_areaType.setFlat(True)
        self.groupBox_areaType.setObjectName("groupBox_areaType")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBox_areaType)
        self.verticalLayout_2.setContentsMargins(0, -1, -1, -1)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.rbtn_text = QtWidgets.QRadioButton(self.groupBox_areaType)
        self.rbtn_text.setChecked(True)
        self.rbtn_text.setObjectName("rbtn_text")
        self.verticalLayout_2.addWidget(self.rbtn_text)
        self.rbtn_image = QtWidgets.QRadioButton(self.groupBox_areaType)
        self.rbtn_image.setObjectName("rbtn_image")
        self.verticalLayout_2.addWidget(self.rbtn_image)
        self.vboxlayout.addWidget(self.groupBox_areaType)
        self.groupBox = QtWidgets.QGroupBox(self.dockWidgetContents)
        self.groupBox.setFlat(True)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout.setContentsMargins(0, -1, -1, -1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.rbtn_areato_text = QtWidgets.QRadioButton(self.groupBox)
        self.rbtn_areato_text.setObjectName("rbtn_areato_text")
        self.verticalLayout.addWidget(self.rbtn_areato_text)
        self.rbtn_areato_image = QtWidgets.QRadioButton(self.groupBox)
        self.rbtn_areato_image.setObjectName("rbtn_areato_image")
        self.verticalLayout.addWidget(self.rbtn_areato_image)
        self.vboxlayout.addWidget(self.groupBox)
		# was QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding
        spacerItem = QtWidgets.QSpacerItem(20, 171, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.vboxlayout.addItem(spacerItem)
        self.dockWidget.setWidget(self.dockWidgetContents)
        Lector.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockWidget)
		# was QtWidgets.QAction
        self.actionOpen = QtGui.QAction(Lector)
        icon1 = QtGui.QIcon()
		# was QtGui.QIcon.Normal
		# was QtGui.QIcon.Off
        icon1.addPixmap(QtGui.QPixmap(":/icons/icons/fileopen.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionOpen.setIcon(icon1)
        self.actionOpen.setObjectName("actionOpen")
		
        self.actionExit = QtGui.QAction(Lector)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/icons/exit.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionExit.setIcon(icon2)
        self.actionExit.setObjectName("actionExit")
        self.actionRotateRight = QtGui.QAction(Lector)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/icons/rotate_cw.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionRotateRight.setIcon(icon3)
        self.actionRotateRight.setObjectName("actionRotateRight")
        self.actionRotateLeft = QtGui.QAction(Lector)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/icons/rotate_ccw.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionRotateLeft.setIcon(icon4)
        self.actionRotateLeft.setObjectName("actionRotateLeft")
        self.actionRotateFull = QtGui.QAction(Lector)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/icons/rotate.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionRotateFull.setIcon(icon5)
        self.actionRotateFull.setObjectName("actionRotateFull")
        self.actionZoomIn = QtGui.QAction(Lector)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/icons/viewmag+.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionZoomIn.setIcon(icon6)
        self.actionZoomIn.setObjectName("actionZoomIn")
        self.actionZoomOut = QtGui.QAction(Lector)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/icons/viewmag-.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionZoomOut.setIcon(icon7)
        self.actionZoomOut.setObjectName("actionZoomOut")
        self.actionOcr = QtGui.QAction(Lector)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/icons/player_play.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionOcr.setIcon(icon8)
        self.actionOcr.setObjectName("actionOcr")
        self.actionSaveDocumentAs = QtGui.QAction(Lector)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/icons/filesave.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionSaveDocumentAs.setIcon(icon9)
        self.actionSaveDocumentAs.setObjectName("actionSaveDocumentAs")
        self.actionScan = QtGui.QAction(Lector)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/icons/scanner.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionScan.setIcon(icon10)
        self.actionScan.setObjectName("actionScan")
        self.actionSaveImageAs = QtGui.QAction(Lector)
        self.actionSaveImageAs.setIcon(icon9)
        self.actionSaveImageAs.setObjectName("actionSaveImageAs")
        self.actionAbout_Lector = QtGui.QAction(Lector)
        self.actionAbout_Lector.setIcon(icon)
        self.actionAbout_Lector.setObjectName("actionAbout_Lector")
        self.actionChangeDevice = QtGui.QAction(Lector)
        self.actionChangeDevice.setObjectName("actionChangeDevice")
        self.actionSettings = QtGui.QAction(Lector)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/icons/configure.png"), QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.actionSettings.setIcon(icon11)
        self.actionSettings.setObjectName("actionSettings")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSaveDocumentAs)
        self.menuFile.addAction(self.actionSaveImageAs)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuView.addAction(self.actionZoomOut)
        self.menuView.addAction(self.actionZoomIn)
        self.menu_Edit.addAction(self.actionRotateLeft)
        self.menu_Edit.addAction(self.actionRotateRight)
        self.menu_Edit.addAction(self.actionRotateFull)
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.actionSettings)
        self.menu_Edit.addAction(self.actionChangeDevice)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout_Lector)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menu_Edit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionRotateLeft)
        self.toolBar.addAction(self.actionRotateRight)
        self.toolBar.addAction(self.actionRotateFull)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionZoomIn)
        self.toolBar.addAction(self.actionZoomOut)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionScan)
        self.toolBar.addAction(self.actionOpen)
        self.toolBar.addAction(self.actionOcr)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionExit)

        self.retranslateUi(Lector)
        self.actionExit.triggered.connect(Lector.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Lector)

    def retranslateUi(self, Lector):
        _translate = QtCore.QCoreApplication.translate
        Lector.setWindowTitle(_translate("Lector", "Lector"))
        self.menuFile.setTitle(_translate("Lector", "&File"))
        self.menuView.setTitle(_translate("Lector", "&View"))
        self.menu_Edit.setTitle(_translate("Lector", "&Edit"))
        self.menuHelp.setTitle(_translate("Lector", "Help"))
        self.toolBar.setWindowTitle(_translate("Lector", "toolBar"))
        self.textEditorDock.setWindowTitle(_translate("Lector", "OCR results"))
        self.groupBox_language.setTitle(_translate("Lector", "Language"))
        self.rbtn_lang_select.setToolTip(_translate("Lector", "Please select language for OCR"))
        self.groupBox_areaType.setTitle(_translate("Lector", "New area"))
        self.rbtn_text.setText(_translate("Lector", "Text"))
        self.rbtn_image.setText(_translate("Lector", "Image"))
        self.groupBox.setToolTip(_translate("Lector", "Change selected area type"))
        self.groupBox.setTitle(_translate("Lector", "Edit area"))
        self.rbtn_areato_text.setText(_translate("Lector", "Text"))
        self.rbtn_areato_image.setText(_translate("Lector", "Image"))
        self.actionOpen.setText(_translate("Lector", "&Open image"))
        self.actionOpen.setShortcut(_translate("Lector", "Ctrl+O"))
        self.actionExit.setText(_translate("Lector", "Exit"))
        self.actionRotateRight.setText(_translate("Lector", "Rotate right"))
        self.actionRotateRight.setShortcut(_translate("Lector", "Ctrl+Right"))
        self.actionRotateLeft.setText(_translate("Lector", "Rotate left"))
        self.actionRotateLeft.setShortcut(_translate("Lector", "Ctrl+Left"))
        self.actionRotateFull.setText(_translate("Lector", "Flip"))
        self.actionRotateFull.setShortcut(_translate("Lector", "Ctrl+Down"))
        self.actionZoomIn.setText(_translate("Lector", "Zoom in"))
        self.actionZoomIn.setShortcut(_translate("Lector", "Ctrl++"))
        self.actionZoomOut.setText(_translate("Lector", "Zoom out"))
        self.actionZoomOut.setShortcut(_translate("Lector", "Ctrl+-"))
        self.actionOcr.setText(_translate("Lector", "Read"))
        self.actionSaveDocumentAs.setText(_translate("Lector", "Save text &as..."))
        self.actionSaveDocumentAs.setShortcut(_translate("Lector", "Ctrl+S"))
        self.actionScan.setText(_translate("Lector", "Scan"))
        self.actionSaveImageAs.setText(_translate("Lector", "Save image as..."))
        self.actionAbout_Lector.setText(_translate("Lector", "About Lector..."))
        self.actionChangeDevice.setText(_translate("Lector", "Change Device"))
        self.actionSettings.setText(_translate("Lector", "Settings"))
        self.actionSettings.setShortcut(_translate("Lector", "Ctrl+T"))
import ui.resources_rc
